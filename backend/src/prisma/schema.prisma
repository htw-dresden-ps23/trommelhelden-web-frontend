generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

generator jsonSchema {
  provider = "prisma-json-schema-generator"
  output   = "../JsonSchema"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Auftrag {
  Aufnr        Int          @id(map: "PK__Auftrag__D56A0E13A096AE56") @default(autoincrement())
  MitID        String?      @db.Char(3)
  KunNr        Int
  AufDat       DateTime     @default(dbgenerated("CONVERT([date],getdate())"), map: "df_Auftragsdatum") @db.Date
  ErlDat       DateTime?    @db.Date
  Dauer        Decimal?     @db.Decimal(5, 1)
  Anfahrt      Int?
  Beschreibung String?      @db.VarChar(200)
  Montage      Montage[]
  Rechnung     Rechnung[]
  Kunde        Kunde        @relation(fields: [KunNr], references: [KunNr], onUpdate: NoAction, map: "FK__Auftrag__KunNr__30F848ED")
  Mitarbeiter  Mitarbeiter? @relation(fields: [MitID], references: [MitID], onDelete: NoAction, onUpdate: NoAction, map: "FK__Auftrag__MitID__300424B4")
}

model Ersatzteil {
  EtID          String    @id(map: "PK__Ersatzte__E294A340180D917B") @db.Char(5)
  EtBezeichnung String    @db.VarChar(100)
  EtPreis       Float     @db.SmallMoney
  EtAnzLager    Int
  EtHersteller  String    @db.VarChar(30)
  Montage       Montage[]
}

model Gebiet {
  GebietID      String         @id(map: "PK__Gebiet__4A0BE64CC4519E84") @db.Char(2)
  NLNr          Int?
  Niederlassung Niederlassung? @relation(fields: [NLNr], references: [NLNr], onDelete: NoAction, onUpdate: NoAction, map: "FK__Gebiet__NLNr__08B54D69")
}

model Kunde {
  KunNr      Int        @id(map: "PK__Kunde__B067D81D772B141B") @default(autoincrement())
  KunName    String     @db.VarChar(20)
  KunOrt     String     @db.VarChar(20)
  KunPLZ     String     @db.Char(5)
  KunStrasse String     @db.VarChar(20)
  Rechnung   Rechnung[]
  Auftrag    Auftrag[]
}

model Mitarbeiter {
  MitID          String         @id(map: "PK__Mitarbei__7D0DA8080DFC1AF1") @db.Char(3)
  MitName        String         @db.VarChar(20)
  MitVorname     String?        @db.VarChar(20)
  MitGebDat      DateTime       @db.Date
  MitJob         String         @default("Monteur", map: "df_MitJob") @db.VarChar(20)
  MitStundensatz Float?         @db.SmallMoney
  NLNr           Int?
  Niederlassung  Niederlassung? @relation(fields: [NLNr], references: [NLNr], onDelete: NoAction, onUpdate: NoAction, map: "FK__Mitarbeite__NLNr__09A971A2")
  Auftrag        Auftrag[]
}

model Montage {
  EtID       String     @db.Char(5)
  AufNr      Int
  Anzahl     Int
  Ersatzteil Ersatzteil @relation(fields: [EtID], references: [EtID], onUpdate: NoAction, map: "FK__Montage__EtID__32E0915F")
  Auftrag    Auftrag    @relation(fields: [AufNr], references: [Aufnr], onDelete: Cascade, onUpdate: NoAction, map: "FK_Montage_Auftrag")

  @@id([EtID, AufNr], map: "PK__Montage__4FC233631208F963")
}

model Niederlassung {
  NLNr        Int           @id(map: "PK__Niederla__E26A7F379C157EC8") @default(autoincrement())
  Ort         String?       @db.VarChar(50)
  Gebiet      Gebiet[]
  Mitarbeiter Mitarbeiter[]
}

model Rechnung {
  KunNr      Int
  AufNr      Int
  RechDat    DateTime @db.Date
  RechBetrag Float    @db.SmallMoney
  Kunde      Kunde    @relation(fields: [KunNr], references: [KunNr], onUpdate: NoAction, map: "FK__Rechnung__KunNr__0C85DE4D")
  Auftrag    Auftrag  @relation(fields: [AufNr], references: [Aufnr], onDelete: Cascade, onUpdate: NoAction, map: "FK_Aufnr")

  @@id([KunNr, AufNr], map: "PK__Rechnung__1D31483EC113249C")
}
